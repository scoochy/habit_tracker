from pydantic import BaseModel
from typing import Literal
from datetime import date

# Base schema shared by create and output models
class HabitBase(BaseModel):
    name: str # Name of the habit (E.g "Meditate")
    type: Literal["body", "mind", "learn"] #Category of the habit, can only be 1 of the 3 defined

# Schema for creating a new habit (request body for POST endpoints)
class HabitCreate(HabitBase):
    pass # Inherited from base

# Schema for returning habit data in responses
class HabitOut(HabitCreate):
    id: int  # Unique identifier for the habit (generated by the database)
    completed: bool  # True/False whether the habit has been completed for the day
    date: date  # Date the habit is assigned to

    class Config:
        orm_mode = True  # Allows reading data from ORM models (e.g., SQLAlchemy) directly

